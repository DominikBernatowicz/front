{"version":3,"sources":["components/Footer.js","components/Header.js","components/InfoTab.js","components/Summary.js","components/chartTab/LineChart.js","components/chartTab/DateRangePicker.js","components/chartTab/ChartTab.js","App.js","constants.js","contexts/SettingsContext.js","serviceWorker.js","store/reducers/user.js","store/reducers/orders.js","store/rootReducer.js","store/index.js","index.js"],"names":["useStyles","makeStyles","theme","footer","backgroundColor","marginTop","display","minHeight","boxShadow","column","flexDirection","justifyContent","alignItems","marginLeft","text","margin","spacing","fontFamily","Footer","classes","Grid","container","className","item","md","xs","header","logo","marginRight","marginBottom","maxWidth","maxHeight","button","tabs","Header","tab","setTab","src","alt","Tabs","value","onChange","event","newValue","variant","scrollButtons","allowScrollButtonsMobile","aria-label","Tab","icon","label","infoTab","textIndent","p","InfoTab","h","Summary","LineChart","data","title","loading","categories","map","Date","timestamp","getTime","series","Object","keys","filter","key","name","toUpperCase","x","y","parseFloat","transformData","options","chart","id","toolbar","show","offsetX","offsetY","tools","download","selection","zoom","zoomin","zoomout","pan","reset","autoSelected","xaxis","type","legend","position","fontSize","onItemClick","toggleDataSeries","align","style","stroke","curve","LinearProgress","height","d","b","DateRangePicker","dateRange","setDateRange","onConfirm","utils","DateFnsUtils","DatePicker","autoOk","format","ampm","dateFrom","date","fullWidth","InputProps","readOnly","dateTo","Button","size","onClick","endIcon","chartTab","customList","listStyleType","padding","dot1","color","dot2","ChartTab","firstData","u1","u2","i1","i2","p1","p2","App","useState","dateForm","setLoading","chartData","setChartData","chartU","setChartU","chartI","setChartI","chartP","setChartP","getTab","range","moment","filterDate","fetch","response","json","jsonData","Array","isArray","console","error","useEffect","Container","THEMES","initialSettings","compact","direction","responsiveFontSizes","roundedCorners","SettingsContext","createContext","settings","saveSettings","SettingsProvider","props","children","setSettings","restoredSettings","storedData","window","localStorage","getItem","JSON","parse","err","restoreSettings","Provider","updatedSettings","setItem","stringify","storeSettings","Consumer","Boolean","location","hostname","match","userSlice","createSlice","initialState","isSessionActive","isLogin","sessionValid","reducers","setSessionStatus","state","action","payload","setLoginStatus","setSessionValid","actions","filters","shop","page","perPage","activeSort","activeFilter","searchValue","saveFilters","rootReducer","combineReducers","user","userReducer","orders","ordersReducer","persistConfig","storage","blacklist","persistedReducer","persistReducer","customizedMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","devTools","process","REACT_APP_ENABLE_REDUX_DEV_TOOLS","middleware","useReduxSelector","persistStore","ReactDOM","render","StyledEngineProvider","injectFirst","LocalizationProvider","dateAdapter","AdapterDateFns","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.63df0cb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    backgroundColor: '#93A1B4',\r\n    marginTop: 30,\r\n    display: 'flex',\r\n    minHeight: 200,\r\n    boxShadow: '0px -5px 10px 3px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  column: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'left',\r\n    marginLeft: 40\r\n  },\r\n  text: {\r\n    margin: theme.spacing(0.3),\r\n    fontFamily: 'Poppins, sans-serif', // Dodano właściwość fontFamily\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.footer}>\r\n      {/* Pierwsza kolumna */}\r\n      <Grid item md={7} xs={12} className={classes.column}>\r\n        <p className={classes.text}>Autor: Dominik Bernatowicz</p>\r\n        <p className={classes.text}>Nr. indeksu: 256863</p>\r\n      </Grid>\r\n\r\n      {/* Druga kolumna */}\r\n      <Grid item md={4} xs={12} className={classes.column}>\r\n        <p className={classes.text}>Uczelnia: Politechnika Wrocławska</p>\r\n        <p className={classes.text}>Wydział: Elektryczny</p>\r\n        <p className={classes.text}>Kierunek: Elektrotechnika</p>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Tabs, Tab\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        backgroundColor: '#93A1B4',\r\n        marginTop: 30,\r\n        display: 'flex',\r\n        boxShadow: '0px 5px 10px 3px rgba(0, 0, 0, 0.2)',\r\n    },\r\n    logo: {\r\n        marginRight: '5%',\r\n        marginBottom: 40,\r\n        maxWidth: '95%',\r\n        maxHeight: '100%',\r\n    },\r\n    button: {\r\n        justifyContent: 'center',\r\n    },\r\n    tabs: {\r\n        maxWidth: '94%'\r\n    }\r\n}));\r\n\r\nconst Header = ({ tab, setTab }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            className={classes.header}\r\n            justifyContent=\"center\"\r\n        >\r\n            <Grid item md={12} xs={12}>\r\n                <img\r\n                    src=\"/logoPWr.png\"\r\n                    alt=\"Logo Politechniki Wrocławskiej\"\r\n                    className={classes.logo}\r\n                />\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                className={classes.tabs}\r\n            >\r\n                <Tabs\r\n                    value={tab}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons\r\n                    allowScrollButtonsMobile\r\n                    aria-label=\"icon position tabs example\"\r\n                    // centered\r\n                >\r\n                    <Tab icon={<InfoIcon />} label=\"Główne informacje\" />\r\n                    <Tab icon={<AssessmentIcon />} label=\"Przebieg napięcia\" />\r\n                    <Tab icon={<AssessmentIcon />} label=\"Przebieg prądu\" />\r\n                    <Tab icon={<AssessmentIcon />} label=\"Przebieg mocy\" />\r\n                    <Tab icon={<FunctionsIcon />} label=\"Streszczenie\" />\r\n                </Tabs>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    infoTab: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'left',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n        fontFamily: 'Comfortaa, sans-serif',\r\n    },\r\n    text: {\r\n        textIndent: '30px'\r\n    },\r\n    p: {\r\n        marginBottom: '20px'\r\n    }\r\n}));\r\n\r\nconst InfoTab = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.infoTab}>\r\n            <Grid item md={10} xs={10} className={classes.column}>\r\n                <Grid\r\n                    item\r\n                    className={classes.p}\r\n                >\r\n                    <h2>\r\n                        Cel Projektu:\r\n                    </h2>\r\n                    <p className={classes.text}>\r\n                        Optymalizacja wydajności ogniw fotowoltaicznych poprzez zdalne monitorowanie i sterowanie ich pozycjonowaniem.\r\n                    </p>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    className={classes.p}\r\n                >\r\n                    <h2>\r\n                        Technologie Wykorzystane w Projekcie:\r\n                    </h2>\r\n                    <ul>\r\n                        <li>\r\n                            Mikrokomputer Raspberry Pi 4 B jako centralna jednostka kontrolna.\r\n\r\n                        </li>\r\n                        <li>\r\n                            Czujniki natężenia światła TSL25911 do pomiaru warunków oświetleniowych.\r\n\r\n                        </li>\r\n                        <li>\r\n                            Moduły mikrokontrolera, takie jak Power Monitoring HAT i Servo PWM Pi Zero PCA9685, do efektywnego zarządzania pozycjonowaniem.\r\n\r\n                        </li>\r\n                        <li>\r\n                            Serwo MG-90S do sterowania ruchem paneli fotowoltaicznych.\r\n\r\n                        </li>\r\n                        <li>\r\n                            Ogniwa słoneczne 1W/6V 136x110x3mm AKU-03694 jako źródło energii.\r\n\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    className={classes.p}\r\n                >\r\n                    <h2>\r\n                        Funkcje Kluczowe:\r\n                    </h2>\r\n                    <ul>\r\n                        <li>\r\n                            Zdalne zbieranie danych pomiarowych dotyczących natężenia światła.\r\n                        </li>\r\n                        <li>\r\n                            Automatyczne dostosowywanie pozycji paneli fotowoltaicznych w oparciu o warunki oświetleniowe.\r\n                        </li>\r\n                        <li>\r\n                            Wykorzystanie algorytmów sterowania do minimalizacji zużycia energii.\r\n                        </li>\r\n                        <li>\r\n                            Możliwość zdalnej konfiguracji i monitorowania systemu poprzez aplikację webową.\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    className={classes.p}\r\n                >\r\n                    <h2>Korzyści:</h2>\r\n                    <ul>\r\n                        <li>\r\n                            Zwiększenie efektywności ogniw fotowoltaicznych.\r\n                        </li>\r\n                        <li>\r\n                            Minimalizacja wpływu zmian warunków atmosferycznych na wydajność systemu.\r\n                        </li>\r\n                        <li>\r\n                            Łatwe zarządzanie i monitorowanie dzięki aplikacji webowej.\r\n                        </li>\r\n                        <li>\r\n                            Potencjalne oszczędności energetyczne dzięki inteligentnemu pozycjonowaniu.\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    className={classes.p}\r\n                >\r\n                    <h2>\r\n                        Oczekiwane Wyniki:\r\n                    </h2>\r\n                    <ul>\r\n                        <li>\r\n                            Zdolność systemu do utrzymania optymalnej orientacji paneli, co przekłada się na zwiększoną produkcję energii.\r\n                        </li>\r\n                        <li>\r\n                            Dostarczenie narzędzia badawczego dla dalszych analiz dotyczących wpływu pozycjonowania na wydajność.\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default InfoTab;\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    infoTab: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'left',\r\n        marginTop: 50\r\n    },\r\n    h: {\r\n        fontFamily: 'Comfortaa, sans-serif',\r\n    },\r\n    text: {\r\n        fontFamily: 'Comfortaa, sans-serif',\r\n        textIndent: '30px'\r\n    },\r\n}));\r\n\r\nconst Summary = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.infoTab}>\r\n            <Grid item md={10} xs={10} className={classes.column}>\r\n                <h1 className={classes.h}>\r\n                    Streszczenie pracy dyplomowej\r\n                </h1>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        W niniejszej pracy inżynierskiej skoncentrowano się na kompleksowym podejściu do zagadnienia ogniw fotowoltaicznych, ze szczególnym uwzględnieniem mechanizmu pozycjonowania paneli fotowoltaicznych. Wprowadzenie zawiera określenie celu i zakresu pracy, wskazując na kluczowe zagadnienia związane z konwersją energii słonecznej na energię elektryczną.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        W drugim rozdziale omówiono zasady działania ogniw fotowoltaicznych, skupiając się na zjawisku fotowoltaicznym. Przeanalizowano rolę materiałów półprzewodnikowych, zjawisko konwersji światła na energię elektryczną, oraz przedstawiono podstawowe rodzaje ogniw fotowoltaicznych. Rozważono również czynniki wpływające na sprawność ogniwa, takie jak parametry zewnętrzne, właściwości materiałowe i straty wewnętrzne.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        Trzeci rozdział poświęcono mechanizmowi pozycjonowania paneli fotowoltaicznych. Klasyfikacja, budowa i zasada działania tego mechanizmu zostały przedstawione w kontekście wpływu na wydajność ogniw. W szczególności omówiono ramę podtrzymującą panele, oś obracającą, silnik i układ napędowy, czujniki światła oraz sterownik. Przedstawiono także różne algorytmy sterowania, takie jak zegarowe, czujnikowe i hybrydowe.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        W części sprzętowej systemu badawczego (rozdział czwarty), wskazano kluczowe elementy, takie jak mikrokontroler Raspberry Pi 4 B, sensory pomiarowe, moduły mikrokontrolera, napęd sterujący oraz panele fotowoltaiczne. Opisano zastosowanie każdego z tych elementów w kontekście zdalnego monitorowania i sterowania pozycjonowaniem ogniw fotowoltaicznych.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        Rozdział piąty poświęcono oprogramowaniu mikrokontrolera, ze szczególnym naciskiem na skuteczne sterowanie i monitorowanie pozycjonowania paneli fotowoltaicznych. Oprogramowanie to odgrywa kluczową rolę w precyzyjnej kontroli nad mechanizmem śledzącym oraz w zbieraniu danych pomiarowych. Szczegółowo omówiono interfejsy, protokoły komunikacyjne i algorytmy używane do sterowania i monitorowania.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        Kolejny rozdział skupił się na zdalnym zbieraniu danych pomiarowych, przedstawiając koncepcję i elementy systemu umożliwiającego skuteczne monitorowanie i analizę parametrów pracy ogniw fotowoltaicznych. W tym kontekście zaprezentowano również aplikację webową, która będzie oparta na technologii React, umożliwiającą łatwy dostęp i zarządzanie danymi.\r\n                    </p>\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <p className={classes.text}>\r\n                        W ostatnim rozdziale przedstawiono całościowe podsumowanie pracy, podkreślając kluczowe wyniki, wnioski i potencjalne obszary dalszych badań. Praca stanowi kompleksowe spojrzenie na zagadnienie ogniw fotowoltaicznych, integrując aspekty teoretyczne, praktyczne i technologiczne.\r\n                    </p>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst LineChart = ({ data, title, loading }) => {\r\n    const transformData = (data) => {\r\n        const categories = data.map((item) => new Date(item.timestamp).getTime());\r\n    \r\n        const series = Object.keys(data[0])\r\n            .filter((key) => key !== 'timestamp')\r\n            .map((key) => ({\r\n                name: key.toUpperCase(),\r\n                data: data.map((item) => ({ x: new Date(item.timestamp).getTime(), y: parseFloat(item[key]) })),\r\n            }));\r\n    \r\n        return { categories, series };\r\n    };\r\n    \r\n    const { categories, series } = transformData(data);\r\n\r\n    const options = {\r\n        chart: {\r\n            id: 'line-chart',\r\n            toolbar: {\r\n                show: true,\r\n                offsetX: 0,\r\n                offsetY: 35,\r\n                tools: {\r\n                    download: true,\r\n                    selection: true,\r\n                    zoom: true,\r\n                    zoomin: true,\r\n                    zoomout: true,\r\n                    pan: true,\r\n                    reset: true,\r\n                },\r\n                autoSelected: 'zoom',\r\n            },\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n            categories: categories, // Użyj kategorii daty\r\n        },\r\n        legend: {\r\n            show: false,\r\n            position: 'bottom',\r\n            fontSize: '14px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            onItemClick: {\r\n                toggleDataSeries: false,\r\n            },\r\n        },\r\n        title: {\r\n            text: title,\r\n            align: 'center',\r\n            style: {\r\n                fontFamily: 'Poppins, sans-serif',\r\n                fontSize: '20px',\r\n            },\r\n        },\r\n        series: series,\r\n        stroke: {\r\n            curve: 'smooth',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            marginRight: 10\r\n        }}>\r\n            {!loading ?\r\n                <ReactApexChart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"line\"\r\n                    height={350}\r\n                /> :\r\n                <>\r\n                    <Grid style={{\r\n                        margin: 150,\r\n                    }}>\r\n                        <LinearProgress />\r\n                        <LinearProgress />\r\n                    </Grid>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n","import {\r\n    Grid,\r\n    Typography,\r\n    Button\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        alignItems: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n        marginLeft: 15,\r\n        fontFamily: 'Comfortaa, sans-serif',\r\n    },\r\n    d: {\r\n        margin: 10\r\n    },\r\n    b: {\r\n        margin: 10,\r\n    }\r\n}));\r\n\r\nconst DateRangePicker = ({ dateRange, setDateRange, onConfirm }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleStartDateChange = (date) => {\r\n        setDateRange({\r\n            ...dateRange,\r\n            dateFrom: date,\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setDateRange({\r\n            ...dateRange,\r\n            dateTo: date\r\n        });\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justifyContent='space-between' className={classes.container}>\r\n                <Grid item xs={12} md={4} className={classes.d}>\r\n                    <DatePicker\r\n                        autoOk\r\n                        label='Data początkowa'\r\n                        variant=\"inline\"\r\n                        format=\"dd/MMM/yyyy\"\r\n                        ampm={false}\r\n                        value={dateRange.dateFrom}\r\n                        onChange={handleStartDateChange}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={4} className={classes.d} >\r\n                    <DatePicker\r\n                        autoOk\r\n                        label=\"Data końcowa\"\r\n                        variant=\"inline\"\r\n                        format=\"dd/MMM/yyyy\"\r\n                        ampm={false}\r\n                        value={dateRange.dateTo}\r\n                        onChange={handleEndDateChange}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3} className={classes.b}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size='large'\r\n                        onClick={() => onConfirm(dateRange)}\r\n                        endIcon={\r\n                            <CloudDownloadIcon fontSize=\"large\" />\r\n                        }>\r\n                        Pobierz wykres\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n};\r\n\r\nexport default DateRangePicker;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Grid } from '@material-ui/core';\r\nimport LineChart from './LineChart';\r\nimport DateRangePicker from './DateRangePicker';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chartTab: {\r\n        fontFamily: 'Comfortaa, sans-serif',\r\n    },\r\n    customList: {\r\n        listStyleType: 'none',\r\n        padding: 0,\r\n    },\r\n    dot1: {\r\n        color: '#028ffb',\r\n        padding: 5\r\n    },\r\n    dot2: {\r\n        color: '#00e396',\r\n        padding: 5\r\n    },\r\n    p: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 40,\r\n        marginBottom: 20\r\n    }\r\n}));\r\n\r\nconst ChartTab = ({ data, title, legend, dateRange, setDateRange, onConfirm, loading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.chartTab}\r\n            item\r\n            xs={11}\r\n            md={11}\r\n        >\r\n            <DateRangePicker\r\n                dateRange={dateRange}\r\n                setDateRange={setDateRange}\r\n                onConfirm={onConfirm}\r\n            />\r\n            <LineChart\r\n                data={data}\r\n                title={title}\r\n            />\r\n            <Grid\r\n                item\r\n                xs={11}\r\n                md={11}\r\n                className={classes.p}\r\n            >\r\n                <FiberManualRecordIcon\r\n                    fontSize='small'\r\n                    className={classes.dot1}\r\n                />\r\n                {legend} ogniwa fotowoltaicznego z pozycjonowaniem\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={11}\r\n                md={11}\r\n                className={classes.p}\r\n            >\r\n                <FiberManualRecordIcon\r\n                    fontSize='small'\r\n                    className={classes.dot2}\r\n                />\r\n                {legend} ogniwa fotowoltaicznego bez pozycjonowaniem\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ChartTab;\r\n","import {\r\n    Container,\r\n    Grid,\r\n} from '@material-ui/core';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport InfoTab from './components/InfoTab';\r\nimport Summary from './components/Summary';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ChartTab from './components/chartTab/ChartTab';\r\nimport moment from 'moment';\r\n\r\nconst firstData = [\r\n    {\r\n        u1: 0,\r\n        u2: 0,\r\n        i1: 0,\r\n        i2: 0,\r\n        p1: 0,\r\n        p2: 0,\r\n        timestamp: null\r\n    }\r\n];\r\n\r\nconst App = () => {\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [dateRange, setDateRange] = useState({\r\n        dateForm: new Date,\r\n        dateTo: new Date,\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [chartData, setChartData] = useState(firstData)\r\n    const [chartU, setChartU] = useState(firstData.map(({ timestamp, u1, u2 }) => ({ timestamp, u1, u2 })));\r\n    const [chartI, setChartI] = useState(firstData.map(({ timestamp, i1, i2 }) => ({ timestamp, i1, i2 })));\r\n    const [chartP, setChartP] = useState(firstData.map(({ timestamp, p1, p2 }) => ({ timestamp, p1, p2 })));\r\n\r\n    const getTab = async (range) => {\r\n        setLoading(true);\r\n    \r\n        let dateFrom = `dateFrom=${moment(range.dateFrom).format('YYYY-MMM-DD')}`;\r\n        let dateTo = `&dateTo=${moment(range.dateTo).format('YYYY-MMM-DD')}`;\r\n        let filterDate = dateFrom + dateTo;\r\n    \r\n        try {\r\n            const response = await fetch(`http://34.118.66.141/data?${filterDate}`);\r\n            const jsonData = await response.json();\r\n    \r\n            // Sprawdź, czy otrzymana odpowiedź jest tablicą\r\n            if (Array.isArray(jsonData)) {\r\n                setChartData(jsonData);\r\n            } else {\r\n                // Jeśli nie jest tablicą, przekształć ją na tablicę\r\n                setChartData([jsonData]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        setChartU(\r\n            chartData.map(({ timestamp, u1, u2 }) => ({ timestamp, u1, u2 }))\r\n        );\r\n        setChartI(\r\n            chartData.map(({ timestamp, i1, i2 }) => ({ timestamp, i1, i2 }))\r\n        );\r\n        setChartP(\r\n            chartData.map(({ timestamp, p1, p2 }) => ({ timestamp, p1, p2 }))\r\n        );\r\n    }, [chartData])\r\n\r\n    return (\r\n        <Container\r\n            style={{\r\n                backgroundColor: \"#f8f7ff\",\r\n                minHeight: '100%',\r\n                maxWidth: \"1000px\",\r\n                justifyContent: 'center',\r\n                boxShadow: '0px 5px 30px 3px rgba(0, 0, 0, 0.2)',\r\n                margin: 'auto',\r\n                padding: 0\r\n            }}\r\n        >\r\n            <Header tab={tab} setTab={setTab} />\r\n            <Grid\r\n                container\r\n                justifyContent='center'\r\n            >\r\n                {tab === 0 ? <InfoTab /> : \"\"}\r\n                {tab === 1 ?\r\n                    <ChartTab\r\n                        data={chartU}\r\n                        title=\"Generowane napięcie\"\r\n                        legend=\"Napięcie\"\r\n                        dateRange={dateRange}\r\n                        setDateRange={setDateRange}\r\n                        onConfirm={getTab}\r\n                        loading={loading}\r\n                    /> : \"\"\r\n                }\r\n                {tab === 2 ?\r\n                    <ChartTab\r\n                        data={chartI}\r\n                        title=\"Generowany prąd\"\r\n                        legend=\"Prąd\"\r\n                        dateRange={dateRange}\r\n                        setDateRange={setDateRange}\r\n                        onConfirm={getTab}\r\n                        loading={loading}\r\n                    /> : \"\"\r\n                }\r\n                {tab === 3 ?\r\n                    <ChartTab\r\n                        data={chartP}\r\n                        title=\"Generowana moc\"\r\n                        legend=\"Moc\"\r\n                        dateRange={dateRange}\r\n                        setDateRange={setDateRange}\r\n                        onConfirm={getTab}\r\n                        loading={loading}\r\n                    /> : \"\"\r\n                }\r\n                {tab === 4 ? <Summary /> : \"\"}\r\n            </Grid>\r\n            <Footer />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export const THEMES = {\r\n  LIGHT: 'LIGHT',\r\n  DARK: 'DARK',\r\n  NATURE: 'NATURE'\r\n};\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { THEMES } from '../constants';\r\n\r\nconst initialSettings = {\r\n  compact: true,\r\n  direction: 'ltr',\r\n  responsiveFontSizes: true,\r\n  roundedCorners: true,\r\n  theme: THEMES.LIGHT\r\n};\r\n\r\nexport const restoreSettings = () => {\r\n  let settings = null;\r\n\r\n  try {\r\n    const storedData = window.localStorage.getItem('settings');\r\n\r\n    if (storedData) {\r\n      settings = JSON.parse(storedData);\r\n    } else {\r\n      settings = {\r\n        compact: true,\r\n        direction: 'ltr',\r\n        responsiveFontSizes: true,\r\n        roundedCorners: true,\r\n        theme: THEMES.LIGHT\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    // If stored data is not a strigified JSON this will fail,\r\n    // that's why we catch the error\r\n  }\r\n\r\n  return settings;\r\n};\r\n\r\nexport const storeSettings = (settings) => {\r\n  window.localStorage.setItem('settings', JSON.stringify(settings));\r\n};\r\n\r\nconst SettingsContext = createContext({\r\n  settings: initialSettings,\r\n  saveSettings: () => { }\r\n});\r\n\r\nexport const SettingsProvider = (props) => {\r\n  const { children } = props;\r\n  const [settings, setSettings] = useState(initialSettings);\r\n\r\n  useEffect(() => {\r\n    const restoredSettings = restoreSettings();\r\n\r\n    if (restoredSettings) {\r\n      setSettings(restoredSettings);\r\n    }\r\n  }, []);\r\n\r\n  const saveSettings = (updatedSettings) => {\r\n    setSettings(updatedSettings);\r\n    storeSettings(updatedSettings);\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings,\r\n        saveSettings\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nSettingsProvider.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport const SettingsConsumer = SettingsContext.Consumer;\r\n\r\nexport default SettingsContext;\r\n","/* eslint-disable */\r\n/* @ts-nocheck */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { isSessionActive: false, isLogin: false, sessionValid: '' }\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setSessionStatus(state, action) {\r\n      state.isSessionActive = action.payload;\r\n    },\r\n    setLoginStatus(state, action) {\r\n      state.isLogin = action.payload;\r\n    },\r\n    setSessionValid(state, action) {\r\n      state.sessionValid = action.payload;\r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const { setSessionStatus, setLoginStatus, setSessionValid } = userSlice.actions\r\nexport default userSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialQueryParams = {\r\n  shop: { id: \".\", name: \"WSZYSTKIE SKLEPY\" },\r\n  page: 0,\r\n  perPage: 15,\r\n  activeSort: {key: '-created_at', value: 'Najnowsze'},\r\n  activeFilter: { key: \"status\", searchValue: \"new_order\" }\r\n}\r\n\r\nconst initialState = { filters: initialQueryParams }\r\n\r\nconst userSlice = createSlice({\r\n  name: 'orders',\r\n  initialState,\r\n  reducers: {\r\n    saveFilters(state, action) {\r\n      state.filters = action.payload;\r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport const { saveFilters } = userSlice.actions\r\nexport default userSlice.reducer\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport userReducer from \"./reducers/user\";\r\nimport ordersReducer from './reducers/orders'\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  orders: ordersReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { useDispatch as useReduxDispatch, useSelector as useReduxSelector } from 'react-redux';\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {persistReducer, persistStore} from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['orders'],\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst customizedMiddleware = getDefaultMiddleware({\r\n  serializableCheck: false\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.REACT_APP_ENABLE_REDUX_DEV_TOOLS === 'true',\r\n  middleware: customizedMiddleware\r\n});\r\n\r\nexport const useSelector = useReduxSelector;\r\n\r\nexport const useDispatch = () => useReduxDispatch();\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store\r\n\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'nprogress/nprogress.css';\r\nimport { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\r\nimport App from './App';\r\nimport { SettingsProvider } from './contexts/SettingsContext';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <HelmetProvider>\r\n      <ReduxProvider store={store}>\r\n        <StyledEngineProvider injectFirst>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <SettingsProvider>\r\n              <BrowserRouter>\r\n                <App />\r\n              </BrowserRouter>\r\n            </SettingsProvider>\r\n          </LocalizationProvider>\r\n        </StyledEngineProvider>\r\n      </ReduxProvider>\r\n    </HelmetProvider>\r\n  </StrictMode>, document.getElementById('root')\r\n);\r\n\r\n// If you want to enable client cache, register instead.\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}